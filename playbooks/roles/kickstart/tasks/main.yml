- name: Gathering vmware_guest_facts
  vsphere_guest:
    vmware_guest_facts: yes
    vcenter_hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    guest: "{{ inventory_hostname }}"
  register: vmguest_facts
  delegate_to: localhost
  #become: no

- name: Report mac addresses
  debug: msg="{{ hostvars[inventory_hostname]['hw_eth0']['macaddress'] }}"
  delegate_to: localhost
  #become: no

- name: Retrieve info about the mount directory
  stat: path= "{{ nfs_mount_dir_path }}"
  register: mount_dir_stat_first
  run_once: true

- name: Create the mount directory
  file: path="{{ nfs_mount_dir_path }}" state=directory mode=0755
  when: mount_dir_stat_first.stat.exists == False
  run_once: true

- name: Ensure nfs mount
  local_action: mount name="{{ nfs_mount_dir_path }}" src={{ kickstart_nfs_server }}:{{ nfs_server_dir_path }} fstype=nfs opts=nolock state=mounted
  run_once: true 

- name: Preparing kickstart file (hostname.cfg)
  local_action: shell echo "MMACADDR0\\tHOSTNAME" > {{ nfs_mount_dir_path }}{{ kickstart_dir_path }}/hostname.cfg
  run_once: true
  become: no

- name: Preparing kickstart file (hostname.cfg)
  local_action: shell echo "----------------------\\t---------------" >> {{ nfs_mount_dir_path }}{{ kickstart_dir_path }}/hostname.cfg 
  run_once: true
  become: no

- name: Export mac addresses to kickstart files (hostname.cfg)
  local_action: shell echo "{{ hostvars[item.key]['hw_eth0']['macaddress'] }}\\t{{ item.value.hostsname }}" >> {{ nfs_mount_dir_path }}{{ kickstart_dir_path }}/hostname.cfg
  become: no
  with_dict: "{{ vm_config }}"
  run_once: true

- name: Preparing kickstart file (ip.cfg)
  local_action: shell echo "HOSTNAME\\tVMKernel\tIP" > {{ nfs_mount_dir_path }}{{ kickstart_dir_path }}/ip.cfg
  run_once: true
  become: no

- name: Preparing kickstart file (ip.cfg)
  local_action: shell echo "------------\\t---------------\\t-----------" >> {{ nfs_mount_dir_path }}{{ kickstart_dir_path }}/ip.cfg
  run_once: true
  become: no

- name: Export IP addresses to kickstart file (ip.cfg)
  #local_action: shell echo "{{ item.1 }}\\t\\tvmk0\\t\\t{{ ipaddress }}" >>  {{ nfs_mount_dir_path }}{{ kickstart_dir_path }}/ip.cfg
  local_action: shell echo "{{ item.value.hostsname }}\\t\\tvmk0\\t\\t{{ item.value.mgmt_ip_addr }}" >>  {{ nfs_mount_dir_path }}{{ kickstart_dir_path }}/ip.cfg
  run_once: true
  become: no
  with_dict: "{{ vm_config }}"

- name: Unmount NFS server
  local_action: mount name="{{ nfs_mount_dir_path }}" src={{ kickstart_nfs_server }}:{{ nfs_server_dir_path }} fstype=nfs  state=unmounted
  run_once: true

- name: Delete NFS mount
  file: path="{{ nfs_mount_dir_path }}" state=absent mode=0755
  when: mount_dir_stat_first.stat.exists == False
  run_once: true
