- name: Create VMs
  vsphere_guest:
   vcenter_hostname: "{{ vcenter_hostname }}"
   username: "{{ vcenter_username }}"
   password: "{{ vcenter_password }}"
   guest: "{{ item.key }}"
   cluster: "{{ vcenter_cluster }}"
   resource_pool: "/Resources/{{ esxi_resource_pool }}"
   state: present
#  vm_extra_config:
   vm_disk:
     disk1:
       size_gb: "{{ item.value.disk_size }}"
       type: thin
       datastore: "{{ item.value.deploy_target_datastore }}"
   vm_nic:
     nic1:
       type: e1000
       network: "{{ vmnic0_portgroup }}"
       network_type: standard
     nic2:
       type: e1000
       network: "{{ vmnic1_portgroup }}"
       network_type: standard
     nic3:
       type: e1000
       network: "{{ vmnic2_portgroup }}"
       network_type: standard
     nic4:
       type: e1000
       network: "{{ vmnic3_portgroup }}"
       network_type: standard
     nic5:
       type: e1000
       network: "{{ vmnic4_portgroup }}"
       network_type: standard
   vm_hw_version: vmx-08
   vm_hardware:
     memory_mb: "{{ item.value.memory_size }}"
     num_cpus: "{{ item.value.cpucount }}"
     osid: vmkernel5Guest
     scsi: lsi
     vm_cdrom:
       type: "iso"
       iso_path: "{{ esxi_iso_path }}"
   esxi:
     datacenter: "{{ vm_datacenter }}"
     hostname: "{{ item.value.deploy_target_esxi }}"
  with_dict: "{{ vm_config }}"

- name: Gathering vmware_guest_facts
  vsphere_guest:
    vmware_guest_facts: yes
    vcenter_hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    guest: "{{ item.key }}"
  register: vmguest_facts
  delegate_to: localhost
  with_dict: "{{ vm_config }}"

#- name: Add hosts to in-memory inventory
#  local_action: add_host name="{{ item.key }}" group=vms
#  with_dict: "{{ vm_config }}"

#- name: Write out to hosts
#  lineinfile: dest={{ ansible_home }}/deploy-vsphere-cluster/{{ project_name }}.ini state=present line=[vms]

#- name: Write out to hosts
#  lineinfile:  dest={{ ansible_home }}/deploy-vsphere-cluster/{{ project_name }}.ini state=present line="{{ item.key }}"
#  with_dict: "{{ vm_config }}"

- name: Confirm
  pause:
